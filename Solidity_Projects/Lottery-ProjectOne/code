//SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.5.0 < 0.9.0;

contract praclott {
    address public manager;
    address payable[] public players;
    constructor() {
        manager = msg.sender;
    }
    function balancecheck() public view returns(uint) {
        require(msg.sender == manager);
        return address(this).balance;
    }
    receive() external payable {
        require(msg.value == 10 ether);
        players.push(payable(msg.sender));
    }
    function random() internal view returns(uint) {
        return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp,players.length)));
    }
    function finalwinner() public {
        require(players.length == 3);
        require(msg.sender == manager);
        uint n = random();
        address payable selectWinner;
        uint personSelected = n % players.length;
        selectWinner = players[personSelected];
        selectWinner.transfer(balancecheck());
    }
}
